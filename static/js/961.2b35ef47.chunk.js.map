{"version":3,"file":"static/js/961.2b35ef47.chunk.js","mappings":"mRAEMA,EAAS,mCACFC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,kEACsDF,GAE9D,EAEYG,EAAkB,SAAAC,GAC7B,OAAOF,EAAAA,EAAAA,IAAA,4DACgDF,EADhD,iCAC+EI,EAD/E,+BAGR,EAEYC,EAAe,SAAAC,GAC1B,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,oBAC+CN,EAD/C,mBAGR,EAEYO,EAAU,SAAAD,GACrB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,4BACuDN,EADvD,0BAGR,EAEYQ,EAAa,SAAAF,GACxB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,4BACuDN,EADvD,0BAGR,C,kLC1BM,SAASS,IACd,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMZ,GAAN,0FACMD,EAAAA,EAAAA,GAAaC,GADnB,gBACTa,EADS,EACTA,KAERP,EAASO,GAHQ,2CAAH,sDAMhBD,EAAWH,EAEZ,GAAE,IAEH,IAAMK,EAAQC,KAAKC,MAA2B,GAArBX,EAAMY,eAC/BN,EAAAA,EAAAA,YAAU,WACJN,EAAME,QACRC,EAAUH,EAAME,OAAOW,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,KAEtD,GAAE,CAAChB,EAAME,SACV,IAAMe,EAAe,SAAAC,GACnB,MAAM,kCAAN,OAAyCA,EAC1C,EAED,OACE,iCACE,UAACC,EAAD,WACGF,EAAajB,EAAMoB,eAClB,gBACEC,IAAKJ,EAAajB,EAAMoB,aACxBE,IAAKtB,EAAMuB,MACXC,MAAO,OAGX,4BACE,wBAAKxB,EAAMuB,SACX,wCAAgBd,EAAhB,SACA,sCACA,uBAAIT,EAAMyB,YACV,oCACA,uBAAIvB,WAGR,UAACwB,EAAD,YACE,oDACA,2BACE,SAAC,KAAD,CAAMC,GAAE,kBAAavB,EAAb,SAAR,UACE,cAAGwB,UAAU,GAAb,qBAEF,SAAC,KAAD,CAAMD,GAAE,kBAAavB,EAAb,YAAR,UACE,cAAGwB,UAAU,GAAb,8BAIN,0BACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,oCAApB,UACE,SAAC,KAAD,UAKT,CACD,YAEA,IAAMX,EAAUY,EAAAA,GAAAA,IAAH,4EAKPL,EAAYK,EAAAA,GAAAA,IAAH,oH","sources":["api/index.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'db45881e2afb9e1808a4f023bca65e3c';\nexport const getTrendingMovies = () => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n  );\n};\n\nexport const getSearchMovies = query => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const getOneMovies = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n  );\n};\n\nexport const getCast = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US&page=1`\n  );\n};\n\nexport const getReviews = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n};\n","import { Link, useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getOneMovies } from 'api';\nimport styled from 'styled-components';\n\nexport function MovieDetails() {\n  const [movie, setMovie] = useState([]);\n  const [genres, setGenres] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async id => {\n      const { data } = await getOneMovies(id);\n\n      setMovie(data);\n    };\n\n    fetchMovie(movieId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const score = Math.round(movie.vote_average * 10);\n  useEffect(() => {\n    if (movie.genres) {\n      setGenres(movie.genres.map(item => item.name).join(' '));\n    }\n  }, [movie.genres]);\n  const getPosterURL = posterPath => {\n    return `https://image.tmdb.org/t/p/w500${posterPath}`;\n  };\n\n  return (\n    <>\n      <Wrapper>\n        {getPosterURL(movie.poster_path) && (\n          <img\n            src={getPosterURL(movie.poster_path)}\n            alt={movie.title}\n            width={250}\n          />\n        )}\n        <div>\n          <h1>{movie.title}</h1>\n          <p>User score: {score} %</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{genres}</p>\n        </div>\n      </Wrapper>\n      <InfoTitle>\n        <h2>Additional information</h2>\n        <ul>\n          <Link to={`/movies/${movieId}/cast`}>\n            <p className=\"\">Cast</p>\n          </Link>\n          <Link to={`/movies/${movieId}/reviews`}>\n            <p className=\"\">Reviews</p>\n          </Link>\n        </ul>\n      </InfoTitle>\n      <div>\n        <Suspense fallback={<h1>Loading</h1>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n}\nexport default MovieDetails;\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px 0;\n`;\nconst InfoTitle = styled.div`\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  text-decoration: none;\n`;\n"],"names":["apiKey","getTrendingMovies","axios","getSearchMovies","query","getOneMovies","id","getCast","getReviews","MovieDetails","useState","movie","setMovie","genres","setGenres","movieId","useParams","useEffect","fetchMovie","data","score","Math","round","vote_average","map","item","name","join","getPosterURL","posterPath","Wrapper","poster_path","src","alt","title","width","overview","InfoTitle","to","className","Suspense","fallback","styled"],"sourceRoot":""}