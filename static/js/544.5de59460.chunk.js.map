{"version":3,"file":"static/js/544.5de59460.chunk.js","mappings":"mRAEMA,EAAS,mCACFC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,kEACsDF,GAE9D,EAEYG,EAAkB,SAAAC,GAC7B,OAAOF,EAAAA,EAAAA,IAAA,4DACgDF,EADhD,iCAC+EI,EAD/E,+BAGR,EAEYC,EAAe,SAAAC,GAC1B,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,oBAC+CN,EAD/C,mBAGR,EAEYO,EAAU,SAAAD,GACrB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,4BACuDN,EADvD,0BAGR,EAEYQ,EAAa,SAAAF,GACxB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,4BACuDN,EADvD,0BAGR,C,gLC1BM,SAASS,IACd,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,aAAcL,GAC1B,IAAMM,EAAe,SAAAC,GACnB,MAAM,kCAAN,OAAyCA,EAC1C,EAWD,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACInB,EAAAA,EAAAA,MADJ,OACXoB,EADW,OAEjBT,EAAcS,EAAOC,KAAKC,SAFT,2CAAH,qDAKhBH,GACD,GAAE,KAGD,0BACE,SAACI,EAAD,UACGb,GACCA,EAAWc,KAAI,SAAAC,GAAI,OACjB,SAACC,EAAD,WACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,EAAKpB,IACpBuB,MAAO,CAAEC,KAAMjB,GACfkB,MAAO,CAAE,kBAAmB,QAH9B,UAKE,2BACGd,EAAaS,EAAKM,eACjB,gBACEC,IAAKhB,EAAaS,EAAKM,aACvBE,IAAKR,EAAKS,MACVC,MAAO,OAGX,UAACC,EAAD,YACE,SAACC,EAAD,UAAaZ,EAAKS,SAClB,UAACI,EAAD,0BACeb,EAAKc,aAAaC,QAAQ,eAjBtCf,EAAKpB,GADC,OA4B5B,CACD,YAEA,IAAMkB,EAAWkB,EAAAA,GAAAA,GAAH,0RAeRf,EAAOe,EAAAA,GAAAA,GAAH,6CAIJL,EAAcK,EAAAA,GAAAA,IAAH,2IAOXJ,EAAaI,EAAAA,GAAAA,EAAH,wGAOVH,EAAaG,EAAAA,GAAAA,EAAH,qC","sources":["api/index.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '3d474b4b143267599ff69bdae2b1bdff';\nexport const getTrendingMovies = () => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n  );\n};\n\nexport const getSearchMovies = query => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const getOneMovies = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n  );\n};\n\nexport const getCast = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US&page=1`\n  );\n};\n\nexport const getReviews = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n};\n","import { getTrendingMovies } from 'api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport function Home() {\n  const [trendMovie, setTrendMovie] = useState([]);\n  const location = useLocation();\n  console.log('trendMovie', trendMovie);\n  const getPosterURL = posterPath => {\n    return `https://image.tmdb.org/t/p/w500${posterPath}`;\n  };\n\n  useEffect(() => {\n    const fetchTrend = async () => {\n      const movies = await getTrendingMovies();\n      setTrendMovie(movies.data.results);\n    };\n\n    fetchTrend();\n  }, []);\n\n  return (\n    <div>\n      <CardGrid>\n        {trendMovie &&\n          trendMovie.map(item => (\n            <Card key={item.id}>\n              <Link\n                to={`/movies/${item.id}`}\n                state={{ from: location }}\n                style={{ 'text-decoration': 'none' }}\n              >\n                <div>\n                  {getPosterURL(item.poster_path) && (\n                    <img\n                      src={getPosterURL(item.poster_path)}\n                      alt={item.title}\n                      width={250}\n                    />\n                  )}\n                  <TextWrapper>\n                    <MovieTitle>{item.title}</MovieTitle>\n                    <MovieScore>\n                      User score: {item.vote_average.toFixed(2)}\n                    </MovieScore>\n                  </TextWrapper>\n                </div>\n              </Link>\n            </Card>\n          ))}\n      </CardGrid>\n    </div>\n  );\n}\nexport default Home;\n\nconst CardGrid = styled.ul`\n  padding: 0;\n  list-style: none;\n  gap: 20px;\n  display: flex;\n  direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  /* display: grid;\n  padding: 20px 10px;\n\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); */\n`;\n\nconst Card = styled.li`\n  max-width: 250px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 105px;\n  justify-content: space-between;\n  color: black;\n`;\nconst MovieTitle = styled.p`\n  font-size: 24px;\n  margin: 0;\n  padding-top: 24px;\n  padding-bottom: 8px;\n`;\n\nconst MovieScore = styled.p`\n  margin: 0;\n`;\n"],"names":["apiKey","getTrendingMovies","axios","getSearchMovies","query","getOneMovies","id","getCast","getReviews","Home","useState","trendMovie","setTrendMovie","location","useLocation","console","log","getPosterURL","posterPath","useEffect","fetchTrend","movies","data","results","CardGrid","map","item","Card","to","state","from","style","poster_path","src","alt","title","width","TextWrapper","MovieTitle","MovieScore","vote_average","toFixed","styled"],"sourceRoot":""}