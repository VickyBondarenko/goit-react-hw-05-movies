{"version":3,"file":"static/js/115.a24ab11c.chunk.js","mappings":"mRAEMA,EAAS,mCACFC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,kEACsDF,GAE9D,EAEYG,EAAkB,SAAAC,GAC7B,OAAOF,EAAAA,EAAAA,IAAA,4DACgDF,EADhD,iCAC+EI,EAD/E,+BAGR,EAEYC,EAAe,SAAAC,GAC1B,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,oBAC+CN,EAD/C,mBAGR,EAEYO,EAAU,SAAAD,GACrB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,4BACuDN,EADvD,0BAGR,EAEYQ,EAAa,SAAAF,GACxB,OAAOJ,EAAAA,EAAAA,IAAA,6CACiCI,EADjC,4BACuDN,EADvD,0BAGR,C,yKC1BM,SAASS,IACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMV,GAAN,0FACOC,EAAAA,EAAAA,IAAQD,GADf,gBACRW,EADQ,EACRA,KAERL,GAAQ,OAAIK,EAAKN,OAHD,2CAAH,sDAMfK,EAAUH,EAEX,GAAE,IAMH,OACE,yBACGF,EAAKO,OACJP,EAAKQ,KAAI,SAAAC,GAAI,OACX,UAACC,EAAD,YACE,gBACEC,IACEF,EAAKG,cAXEC,EAYUJ,EAAKG,aAX5B,kCAAN,OAAyCC,IAYzB,mDAENC,IAAKL,EAAKM,KACVC,MAAO,OAET,wBAAKP,EAAKM,QACV,0BACE,sCADF,IACqBN,EAAKQ,eAZjBR,EAAKS,WARH,IAAAL,CAOF,KAkBb,mFAIP,CACD,YAEA,IAAMH,EAAOS,EAAAA,GAAAA,GAAH,kE","sources":["api/index.js","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '3d474b4b143267599ff69bdae2b1bdff';\nexport const getTrendingMovies = () => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n  );\n};\n\nexport const getSearchMovies = query => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const getOneMovies = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n  );\n};\n\nexport const getCast = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US&page=1`\n  );\n};\n\nexport const getReviews = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'api';\nimport styled from 'styled-components';\n\nexport function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchCast = async id => {\n      const { data } = await getCast(id);\n\n      setCast([...data.cast]);\n    };\n\n    fetchCast(movieId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getPosterURL = posterPath => {\n    return `https://image.tmdb.org/t/p/w500${posterPath}`;\n  };\n\n  return (\n    <div>\n      {cast.length ? (\n        cast.map(item => (\n          <Item key={item.credit_id}>\n            <img\n              src={\n                item.profile_path\n                  ? getPosterURL(item.profile_path)\n                  : 'http://placehold.it/200x300/000/fff&text=no foto'\n              }\n              alt={item.name}\n              width={200}\n            ></img>\n            <h2>{item.name}</h2>\n            <p>\n              <b>Character:</b> {item.character}\n            </p>\n          </Item>\n        ))\n      ) : (\n        <h2>We don't have any information of cast for this movie.</h2>\n      )}\n    </div>\n  );\n}\nexport default Cast;\n\nconst Item = styled.li`\n  list-style: none;\n  padding-top: 20px;\n`;\n"],"names":["apiKey","getTrendingMovies","axios","getSearchMovies","query","getOneMovies","id","getCast","getReviews","Cast","useState","cast","setCast","movieId","useParams","useEffect","fetchCast","data","length","map","item","Item","src","profile_path","posterPath","alt","name","width","character","credit_id","styled"],"sourceRoot":""}